version: "3"
services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
    ports:
      - 9411:9411
    networks:
      - mynet
  authors:
    image: estoyanov/bff-authors-service:1.0
    container_name: bff-authors-service
    ports:
      - 8081:8081
    networks:
      - mynet
  books:
    image: estoyanov/bff-books-service:1.0
    container_name: bff-books-service
    ports:
      - 8082:8082
    networks:
      - mynet
  web-sockets:
    image: estoyanov/bff-web-sockets-service:1.0
    container_name: bff-web-sockets-service
    ports:
      - 8083:8083
    networks:
      - mynet
  redis:
    image: redis:latest
    container_name: bff-redis
    ports:
      - 16379:6379
    networks:
      - mynet

  bff-frontend:
    image: estoyanov/bff-frontend:1.0
    container_name: bff-frontend-service
    ports:
       - 8084:8084
    networks:
        - mynet

  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.2.0"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    #Port 9200 is available on the host. Need to for user to access as well as Packetbeat
    ports: ['9200:9200']
    #Healthcheck to confirm availability of ES. Other containers wait on this.
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:changeme", "http://localhost:9200/_cat/health"]
    #Internal network for the containers
    networks:
      - mynet

  #Kibana container
  kibana:
    container_name: kibana
    hostname: kibana
    image: "docker.elastic.co/kibana/kibana:7.2.0"
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    #Port 5601 accessible on the host
    ports: ['5601:5601']
    networks:
      - mynet
    #We don't start Kibana until the ES instance is ready
    depends_on: ['elasticsearch']
    environment:
      - "ELASTICSEARCH_PASSWORD=changeme"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
      retries: 6

  #Filebeat container
  filebeat:
    container_name: filebeat
    hostname: filebeat
    user: root
    image: "docker.elastic.co/beats/filebeat:7.2.0"
    volumes:
      #Mount the filebeat configuration so users can make edit
      - ./config/beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mynet
    command: filebeat -e -E output.elasticsearch.username=elastic -E output.elasticsearch.password=changeme -strict.perms=false
    restart: on-failure
    depends_on:
      #wait for the these services to come up. This ensures the logs are available and ES exists for indexing
      elasticsearch:  { condition: service_healthy }
      authors: { condition: service_started }
      books: { condition: service_started }

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    links:
      - prometheus:prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - mynet

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      - mynet
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    networks:
      - mynet
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    networks:
      - mynet
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080

volumes:
  #Es data
  esdata:
    driver: local

networks:
  mynet:
